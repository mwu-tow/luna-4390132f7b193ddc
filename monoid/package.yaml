name: monoid
version: 0.1.9
synopsis: Monoid type classes, designed in modular way, distinguish Monoid from Mempty
  and Semigroup. This design allows mempty operation don't bring Semigroups related
  constraints until (<>) is used.
category: Data
license: Apache-2.0
stability: experimental
homepage: https://github.com/luna/monoid
bug-reports: https://github.com/luna/monoid/issues
author: Luna Team
copyright: Copyright (C) 2018 Luna Team
maintainer: Wojciech Danilo <wojciech.danilo@luna-lang.org>

ghc-options:
- -Wall
- -O2

library:
  source-dirs:
  - src
  dependencies:
  - base >= 4.9 && < 4.13
  - lens
  - mtl
  - containers

default-extensions:
- AllowAmbiguousTypes
- ApplicativeDo
- BangPatterns
- BinaryLiterals
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveDataTypeable
- DeriveFoldable
- DeriveFunctor
- DeriveGeneric
- DeriveTraversable
- DoAndIfThenElse
- DuplicateRecordFields
- EmptyDataDecls
- FlexibleContexts
- FlexibleInstances
- FunctionalDependencies
- GeneralizedNewtypeDeriving
- InstanceSigs
- LambdaCase
- MonadComprehensions
- MultiWayIf
- NamedWildCards
- NegativeLiterals
- NoImplicitPrelude
- NumDecimals
- OverloadedLabels
- PackageImports
- QuasiQuotes
- PatternSynonyms
- RankNTypes
- RecursiveDo
- ScopedTypeVariables
- StandaloneDeriving
- TemplateHaskell
- TupleSections
- TypeApplications
- TypeFamilies
- TypeFamilyDependencies
- TypeOperators
- UnicodeSyntax
- ViewPatterns
- LiberalTypeSynonyms
- RelaxedPolyRec
